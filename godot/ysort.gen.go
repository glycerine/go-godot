package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewYSortFromPointer(ptr gdnative.Pointer) YSort {
func newYSortFromPointer(ptr gdnative.Pointer) YSort {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := YSort{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Sort all child nodes based on their Y positions. The child node must inherit from [CanvasItem] for it to be sorted. Nodes that have a higher Y position will be drawn later, so they will appear on top of nodes that have a lower Y position. Nesting of YSort nodes is possible. Children YSort nodes will be sorted in the same space as the parent YSort, allowing to better organize a scene or divide it in multiple ones, yet keep the unique sorting.
*/
type YSort struct {
	Node2D
	owner gdnative.Object
}

func (o *YSort) BaseClass() string {
	return "YSort"
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *YSort) IsSortEnabled() gdnative.Bool {
	//log.Println("Calling YSort.IsSortEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("YSort", "is_sort_enabled")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false enabled bool}], Returns: void
*/
func (o *YSort) SetSortEnabled(enabled gdnative.Bool) {
	//log.Println("Calling YSort.SetSortEnabled()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(enabled)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("YSort", "set_sort_enabled")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// YSortImplementer is an interface that implements the methods
// of the YSort class.
type YSortImplementer interface {
	Node2DImplementer
	IsSortEnabled() gdnative.Bool
	SetSortEnabled(enabled gdnative.Bool)
}
